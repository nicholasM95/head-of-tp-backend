openapi: 3.0.3
info:
  title: Head Of TP API
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: participant
    description: participant
paths:
  /participant:
    post:
      tags:
        - participant
      operationId: createParticipant
      summary: Create a participant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateParticipantRequest'
      responses:
        204:
          description: Participant successfully created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
    get:
      tags:
        - participant
      operationId: findAllParticipants
      summary: Find all participants
      responses:
        200:
          description: Participants successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParticipantResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  schemas:
    CreateParticipantRequest:
      required:
        - name
        - vehicle
        - role
        - deviceId
      properties:
        name:
          type: string
          example: Nicholas
        vehicle:
          $ref: '#/components/schemas/VehicleType'
        role:
          $ref: '#/components/schemas/RoleType'
        deviceId:
          type: string
          example: 67289
    ParticipantResponse:
      required:
        - id
        - deviceId
        - name
        - vehicle
        - role
        - createDate
        - lastModifiedDate
      properties:
        id:
          type: string
          format: uuid
          example: 7f6986e4-7909-49ad-a498-c08333abd012
        deviceId:
          type: string
          example: 242234
        name:
          type: string
          example: Nicholas Meyers
        vehicle:
          $ref: '#/components/schemas/VehicleType'
        role:
          $ref: '#/components/schemas/RoleType'
        createDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
    VehicleType:
      type: string
      enum:
        - CAR
        - BIKE
    RoleType:
      type: string
      enum:
        - BIKER
        - TP
    ProblemDetailResponse:
      required:
        - title
        - status
        - detail
        - instance
      properties:
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem
          example: 400
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem
          example: /participant
